// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String               @id @default(uuid())
  username      String               @unique
  email         String               @unique
  password      String
  createdAt     DateTime             @default(now())
  messagesSent  Message[]            @relation("SentMessages")
  conversations ConversationMember[]
  readMessages  MessageRead[]
}

model Message {
  id             String        @id @default(uuid())
  content        String
  senderId       String
  conversationId String
  createdAt      DateTime      @default(now())
  sender         User          @relation("SentMessages", fields: [senderId], references: [id])
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  readBy         MessageRead[]
}

model Conversation {
  id        String               @id @default(uuid())
  createdAt DateTime             @default(now())
  messages  Message[]
  members   ConversationMember[]
}

model ConversationMember {
  id             String       @id @default(uuid())
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
}

model MessageRead {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  readAt    DateTime @default(now())
}
